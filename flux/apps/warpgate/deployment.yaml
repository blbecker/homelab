apiVersion: apps/v1
kind: Deployment
metadata:
  name: warpgate
  namespace: warpgate
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: warpgate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: warpgate
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "Always"
        readOnlyRootFilesystem: true
      containers:
        - name: warpgate
          image: ghcr.io/warp-tech/warpgate:0.17.0
          env:
            - name: TZ
              value: "America/New_York"
          ports:
            - name: warpgate-http
              containerPort: 8888
              protocol: TCP
            - name: warpgate-ssh
              containerPort: 2222
              protocol: TCP
            - name: warpgate-mysql
              containerPort: 33306
              protocol: TCP
            - name: warpgate-pg
              containerPort: 55432
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: data
            - name: warpgate-cert
              mountPath: /tls
              readOnly: true
          livenessProbe:
            tcpSocket:
              port: warpgate-http
            initialDelaySeconds: 10
            periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /xrpc/_health
          #     port: warpgate
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 5
          resources:
            requests:
              memory: "250M"
              cpu: ".5"
            limits:
              memory: "2G"
              cpu: "2"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: warpgate-data
        - name: warpgate-cert
          secret:
            secretName: letsencrypt-wildcard-cert-tartarus.us-prod
            items:
              - key: tls.crt
                path: tls.certificate.pem
              - key: tls.key
                path: tls.key.pem
