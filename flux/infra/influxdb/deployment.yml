apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  namespace: influxdb
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb
    spec:
      securityContext:
        readOnlyRootFilesystem: false
      containers:
        - name: influxdb
          image: influxdb:2.7.11
          imagePullPolicy: Always
          env:
            - name: TZ
              value: "America/New_York"
            - name: DOCKER_INFLUXDB_INIT_MODE
              value: setup
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: influxdb-admin
                  key: admin_username
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: influxdb-admin
                  key: admin_password
            - name: DOCKER_INFLUXDB_INIT_ORG
              value: tartarus
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              value: default
          securityContext:
            readOnlyRootFilesystem: false
            fsGroup: 2000
            fsGroupChangePolicy: "Always"
          ports:
            - name: influxdb-web
              containerPort: 8086
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/influxdb2
              name: influxdb-data
          readinessProbe:
            httpGet:
              path: /health
              port: influxdb-web
            initialDelaySeconds: 61
            timeoutSeconds: 5
          resources:
            requests:
              memory: "250M"
              cpu: "250m"
            limits:
              memory: "2G"
              cpu: "2"
      dnsConfig:
        options:
          - name: ndots
            value: "1"

      volumes:
        - name: influxdb-data
          persistentVolumeClaim:
            claimName: influxdb-data
