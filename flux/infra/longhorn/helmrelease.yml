apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: longhorn
  namespace: longhorn
spec:
  chart:
    spec:
      chart: longhorn
      version: 1.7.X
      sourceRef:
        kind: HelmRepository
        name: longhorn
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: longhorn
  values: # https://github.com/longhorn/longhorn/blob/master/chart/values.yaml
    # Default values for longhorn.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.
    # networkPolicies:
    #   enabled: false
    #   # Available types: k3s, rke2, rke1
    #   type: "k3s"

    service:
      ui:
        type: LoadBalancer
        # nodePort: ""
      # manager:
      #   type: ClusterIP
      #   nodePort: ""
      #   loadBalancerIP: ""
      #   loadBalancerSourceRanges: ""

    persistence:
      defaultClass: true
      defaultFsType: ext4
      defaultClassReplicaCount: 3
      defaultDataLocality: best-effort
      reclaimPolicy: Delete
      migratable: false
      recurringJobSelector:
        enable: false
        jobList: []
      backingImage:
        enable: false
        # name: ~
        # dataSourceType: ~
        # dataSourceParameters: ~
        # expectedChecksum: ~
      defaultNodeSelector:
        enable: false # disable by default
        selector: ""
      removeSnapshotsDuringFilesystemTrim: ignored # "enabled" or "disabled" otherwise

    helmPreUpgradeCheckerJob:
      enabled: true

    longhornUI:
      # -- Replica count for longhorn UI
      replicas: 1

    defaultSettings:
      backupTarget: s3://tartarus-longhorn-backups@us-east-005/
      backupTargetCredentialSecret: longhorn-b2-creds
      #   allowRecurringJobWhileVolumeDetached: ~
      #   createDefaultDiskLabeledNodes: ~
      defaultDataPath: /mnt/longhorn
      defaultDataLocality: best-effort
      #   replicaSoftAntiAffinity: ~
      replicaAutoBalance: least-effort
      #   storageOverProvisioningPercentage: ~
      #   storageMinimalAvailablePercentage: ~
      #   storageReservedPercentageForDefaultDisk: ~
      #   upgradeChecker: ~
      #   defaultReplicaCount: ~
      #   defaultLonghornStaticStorageClass: ~
      backupstorePollInterval: 0
    #   failedBackupTTL: ~
    #   restoreVolumeRecurringJobs: ~
    #   recurringSuccessfulJobsHistoryLimit: ~
    #   recurringFailedJobsHistoryLimit: ~
    #   supportBundleFailedHistoryLimit: ~
    #   taintToleration: ~
    #   systemManagedComponentsNodeSelector: ~
    #   priorityClass: ~
    #   autoSalvage: ~
    #   autoDeletePodWhenVolumeDetachedUnexpectedly: ~
    #   disableSchedulingOnCordonedNode: ~
    #   replicaZoneSoftAntiAffinity: ~
    #   nodeDownPodDeletionPolicy: ~
    #   nodeDrainPolicy: ~
    #   replicaReplenishmentWaitInterval: ~
    #   concurrentReplicaRebuildPerNodeLimit: ~
    #   concurrentVolumeBackupRestorePerNodeLimit: ~
    #   disableRevisionCounter: ~
    #   systemManagedPodsImagePullPolicy: ~
    #   allowVolumeCreationWithDegradedAvailability: ~
    #   autoCleanupSystemGeneratedSnapshot: ~
    #   concurrentAutomaticEngineUpgradePerNodeLimit: ~
    #   backingImageCleanupWaitInterval: ~
    #   backingImageRecoveryWaitInterval: ~
    #   guaranteedInstanceManagerCPU: ~
    #   kubernetesClusterAutoscalerEnabled: ~
    #   orphanAutoDeletion: ~
    #   storageNetwork: ~
    #   deletingConfirmationFlag: ~
    #   engineReplicaTimeout: ~
    #   snapshotDataIntegrity: ~
    #   snapshotDataIntegrityImmediateCheckAfterSnapshotCreation: ~
    #   snapshotDataIntegrityCronjob: ~
    #   removeSnapshotsDuringFilesystemTrim: ~
    #   fastReplicaRebuildEnabled: ~
    #   replicaFileSyncHttpClientTimeout: ~
    #   logLevel: ~
    #   backupCompressionMethod: ~
    #   backupConcurrentLimit: ~
    #   restoreConcurrentLimit: ~
    #   v2DataEngine: ~
    #   offlineReplicaRebuilding: ~
